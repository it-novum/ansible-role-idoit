- name: check if idoit installation archive exists
  local_action: stat path={{idoit_zip_file}}
  register: idoit_local_zip_stat

- fail:
    msg: "idoit isn't installed and installation archive not found"
  when: not idoit_local_zip_stat.stat.exists and install_mode == "install"

- name: systemtools
  import_role:
    name: systemtools

- name: Facts
  set_fact:
    apt_dependencies:
      - php-memcache
      - memcached
      - php7.0-snmp
      - php7.0-zip
      - php7.0-bcmath
    php_fpm_service_name: "php7.0-fpm"
  when: ansible_distribution_release == "xenial" or ansible_distribution_release == "stretch"

- name: Facts
  set_fact:
    apt_dependencies:
      - php-memcache
      - memcached
      - php-snmp
      - php-zip
      - php-bcmath
    php_fpm_service_name: "php7.2-fpm"
  when: ansible_distribution_release == "bionic"

- name: Facts
  set_fact:
    apt_dependencies:
      - php-memcache
      - memcached
      - php-snmp
      - php-zip
      - php-bcmath
    php_fpm_service_name: "php7.3-fpm"
  when: ansible_distribution_release == "buster"

- name: Facts
  set_fact:
    apt_dependencies:
      - php-memcache
      - memcached
      - php-snmp
      - php-zip
      - php-bcmath
    php_fpm_service_name: "php7.4-fpm"
  when: ansible_distribution_release == "focal"

- name: Prepare
  include_tasks:
    file: prepare.yml
  when: install_mode == "configure" or install_mode == "prepare" or install_mode == "install"

- name: Install
  include_tasks:
    file: install.yml
  when: install_mode == "install"

- name: Configure
  include_tasks:
    file: configure.yml
  when: install_mode == "configure" or install_mode == "install"

- debug:
    msg: "Idoit admin backend password: {{random_output.stdout}}"
  when: random_output.stdout is defined
